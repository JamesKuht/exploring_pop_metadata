{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from random import sample\n",
    "\n",
    "from itertools import chain\n",
    "from random import sample \n",
    "import scipy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Read the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv('findings_data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Patient ID</th>\n",
       "      <th>Finding Labels</th>\n",
       "      <th>Patient Age</th>\n",
       "      <th>Patient Gender</th>\n",
       "      <th>Mass_Size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cardiomegaly|Emphysema</td>\n",
       "      <td>57</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>No Finding</td>\n",
       "      <td>77</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>Atelectasis</td>\n",
       "      <td>79</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Cardiomegaly|Edema|Effusion</td>\n",
       "      <td>55</td>\n",
       "      <td>F</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>Consolidation|Mass</td>\n",
       "      <td>68</td>\n",
       "      <td>M</td>\n",
       "      <td>2516.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0  Patient ID               Finding Labels  Patient Age  \\\n",
       "0           1           1       Cardiomegaly|Emphysema           57   \n",
       "1           2           2                   No Finding           77   \n",
       "2           3           3                  Atelectasis           79   \n",
       "3           4           4  Cardiomegaly|Edema|Effusion           55   \n",
       "4           5           5           Consolidation|Mass           68   \n",
       "\n",
       "  Patient Gender  Mass_Size  \n",
       "0              M        NaN  \n",
       "1              M        NaN  \n",
       "2              M        NaN  \n",
       "3              F        NaN  \n",
       "4              M     2516.0  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Understand the Distribution\n",
    "To understand distributions of variables as they relate to diseases, let's try splitting up the 'Finding Labels' column into one additional column per disease (e.g. one for 'Cardiomegaly', one for 'Emphysema', etc.) and put a binary flag in that column to indicate the presence of the disease"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "All Labels (14): ['Atelectasis', 'Cardiomegaly', 'Consolidation', 'Edema', 'Effusion', 'Emphysema', 'Fibrosis', 'Infiltration', 'Mass', 'No Finding', 'Nodule', 'Pleural_Thickening', 'Pneumonia', 'Pneumothorax']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Patient ID</th>\n",
       "      <th>Finding Labels</th>\n",
       "      <th>Patient Age</th>\n",
       "      <th>Patient Gender</th>\n",
       "      <th>Mass_Size</th>\n",
       "      <th>Atelectasis</th>\n",
       "      <th>Cardiomegaly</th>\n",
       "      <th>Consolidation</th>\n",
       "      <th>Edema</th>\n",
       "      <th>Effusion</th>\n",
       "      <th>Emphysema</th>\n",
       "      <th>Fibrosis</th>\n",
       "      <th>Infiltration</th>\n",
       "      <th>Mass</th>\n",
       "      <th>No Finding</th>\n",
       "      <th>Nodule</th>\n",
       "      <th>Pleural_Thickening</th>\n",
       "      <th>Pneumonia</th>\n",
       "      <th>Pneumothorax</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>146</td>\n",
       "      <td>146</td>\n",
       "      <td>Infiltration</td>\n",
       "      <td>42</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>933</td>\n",
       "      <td>933</td>\n",
       "      <td>Atelectasis</td>\n",
       "      <td>48</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>535</th>\n",
       "      <td>536</td>\n",
       "      <td>536</td>\n",
       "      <td>No Finding</td>\n",
       "      <td>25</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Unnamed: 0  Patient ID Finding Labels  Patient Age Patient Gender  \\\n",
       "145         146         146   Infiltration           42              M   \n",
       "932         933         933    Atelectasis           48              M   \n",
       "535         536         536     No Finding           25              M   \n",
       "\n",
       "     Mass_Size  Atelectasis  Cardiomegaly  Consolidation  Edema  Effusion  \\\n",
       "145        NaN          0.0           0.0            0.0    0.0       0.0   \n",
       "932        NaN          1.0           0.0            0.0    0.0       0.0   \n",
       "535        NaN          0.0           0.0            0.0    0.0       0.0   \n",
       "\n",
       "     Emphysema  Fibrosis  Infiltration  Mass  No Finding  Nodule  \\\n",
       "145        0.0       0.0           1.0   0.0         0.0     0.0   \n",
       "932        0.0       0.0           0.0   0.0         0.0     0.0   \n",
       "535        0.0       0.0           0.0   0.0         1.0     0.0   \n",
       "\n",
       "     Pleural_Thickening  Pneumonia  Pneumothorax  \n",
       "145                 0.0        0.0           0.0  \n",
       "932                 0.0        0.0           0.0  \n",
       "535                 0.0        0.0           0.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_labels = np.unique(list(chain(*data['Finding Labels'].map(lambda x: x.split('|')).tolist())))\n",
    "all_labels = [x for x in all_labels if len(x)>0]\n",
    "print('All Labels ({}): {}'.format(len(all_labels), all_labels))\n",
    "for c_label in all_labels:\n",
    "    if len(c_label)>1: # leave out empty labels\n",
    "        data[c_label] = data['Finding Labels'].map(lambda finding: 1.0 if c_label in finding else 0)\n",
    "data.sample(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### TODO - 1\n",
    "Now write your code here to visualize some of the distributions specified in the instructions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Atelectasis            93.0\n",
       "Cardiomegaly           38.0\n",
       "Consolidation          43.0\n",
       "Edema                  16.0\n",
       "Effusion               95.0\n",
       "Emphysema              18.0\n",
       "Fibrosis               27.0\n",
       "Infiltration          134.0\n",
       "Mass                   35.0\n",
       "No Finding            575.0\n",
       "Nodule                 41.0\n",
       "Pleural_Thickening     32.0\n",
       "Pneumonia               6.0\n",
       "Pneumothorax           33.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##How are the different diseases distributed in my dataset in terms of \n",
    "##frequency and co-occurrence with one another? (For the sake of time,\n",
    "##just choose one of the diseases and assess its co-occurrence \n",
    "##frequencies with all other diseases.)\n",
    "\n",
    "data[all_labels].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0.5, 'number of occurances')]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = data[all_labels].sum().plot(kind='bar')\n",
    "ax.set(ylabel = 'number of occurances')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fc469691250>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "##Since there are many combinations of potential findings, I'm going to look at the 30 most common co-occurrences:\n",
    "plt.figure(figsize=(16,6))\n",
    "data[data.Infiltration==1]['Finding Labels'].value_counts()[0:30].plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([  5.,  24.,  18.,  33.,  22.,  38.,  46.,  50.,  75.,  79., 100.,\n",
       "         94., 135.,  94.,  54.,  55.,  25.,  33.,  12.,   7.]),\n",
       " array([ 6.  , 10.05, 14.1 , 18.15, 22.2 , 26.25, 30.3 , 34.35, 38.4 ,\n",
       "        42.45, 46.5 , 50.55, 54.6 , 58.65, 62.7 , 66.75, 70.8 , 74.85,\n",
       "        78.9 , 82.95, 87.  ]),\n",
       " <a list of 20 Patch objects>)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# How is age distributed across my dataset? \n",
    "##Is it distributed differently for different diseases?\n",
    "plt.hist(data['Patient Age'],bins = 20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fc466960bd0>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (5,5))\n",
    "data[data.Infiltration==1]['Patient Gender'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fc4668cfd10>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "##How is sex distributed across my dataset? \n",
    "##Is it distributed differently for different diseases?\n",
    "data['Patient Gender'].value_counts().plot(kind = 'bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### How age & gender relate to the mass size?\n",
    "Finally, look at if and how age & gender relate to mass size in individuals who have a mass as a finding:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7fc469cbc8d0>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(data['Patient Age'],data['Mass_Size'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### TODO - 2\n",
    "Use the following to see if there are significant correlations between the two:\n",
    "\n",
    "`scipy.stats.pearsonr(mass_sizes,ages)`<br>\n",
    "`scipy.stats.ttest_ind(mass_sizes_male, mass_sizes_female)`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.7275663300043572, 7.354553889321959e-07)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Write your code here\n",
    "mass_sizes = data['Mass_Size'].values\n",
    "##the tilde (~) here is an inverse operation. i.e. it inverses the statement\n",
    "##in the brackets. i.e. ~0 is -1, ~1 is -2 etc.\n",
    "##Also np.where returns the indices of the elements. i.e this line is\n",
    "##returning the indices of where there isn't a NaN\n",
    "mass_inds = np.where(~np.isnan(mass_sizes))\n",
    "## .iloc allows you to chose specific indices, and then what you want to\n",
    "##grab from them\n",
    "ages = data.iloc[mass_inds]['Patient Age']\n",
    "mass_sizes=mass_sizes[mass_inds]\n",
    "\n",
    "scipy.stats.pearsonr(mass_sizes,ages)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-60-5d9dc290a81b>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-60-5d9dc290a81b>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    mass_sizes_male = data[data['Patient Gender'] =='M']['Mass_Size'])\u001b[0m\n\u001b[0m                                                                     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "mass_sizes_male = data[data['Patient Gender'] =='M']['Mass_Size']\n",
    "\n",
    "mass_sizes_female = data[data['Patient Gender'] =='F']['Mass_Size']\n",
    "\n",
    "scipy.stats.ttest_ind(mass_sizes_male, mass_sizes_female,nan_policy='omit')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
